Ejercicio 3:

● ¿Qué sucede si creas dos objetos Pelicula con los mismos parámetros?
    No pasa nada, ya que son objetos distintos y no importa que sus parámetros sean iguales.

● ¿Puedes crear una Pelicula sin género? ¿Y con varios?
    Si llamas a la función sin rellenar el argumento, no se puede crear, pero si llamas a la función con
    el parámetro NULL permite crear el objeto aunque no funcionarán métodos que usen ese parámetro.
    Esto se debe a que no hay comprobación de errores en los parámetros de llamada a la función.
    En el caso de varios es imposible llamar a la función en ningún caso.

● ¿Qué sucede si le pasas al objeto CarteleraCine un array vacío? ¿Y null? ¿Cómo puedes mejorar el código
para que ese problema no suceda?
    Al pasar el array vacío no da problemas, interpreta que la cartelera está vacía. Pero con el NULL en
    este caso si da error, porque usamos un bucle for que itera la misma cantidad de veces que elementos
    hay en el array, pero al no existir este array salta error.
    Para solucionar este error simplemente se podría hacer un control de errores que evite que se ejecute
    el bucle for en casos de parámetros NULL.


Ejercicio 4:

● Si se quisieran obtener las películas por otros criterios, habría que añadir más métodos a la clase
CarteleraCine. ¿Se te ocurre alguna manera de generalizar el diseño para que no haya que añadir un método
por cada posible criterio de interés?
    Se podrían comprobar todos los argumentos dentro de la misma función, pero moralmente sería equivalente
    a crear funciones diferentes para cada argumento. Otra opción más general es usar el método IndexOf()
    para buscar el argumento dentro del retorno del método CarteleraCine.toString(). Así, bastaría con
    mantener este método actualizado y seríamos capaces de buscar por el criterio que nosotros quisiésemos.


